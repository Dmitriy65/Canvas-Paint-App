{"version":3,"sources":["utils/CanvasUtility.js","utils/FileUtility.js","actions/fileActions.js","reducers/file.js","reducers/index.js","store/configureStore.js","components/CanvasField/CanvasField.js","containers/CanvasField.js","components/ButtonGroup/ButtonGroup.js","containers/ButtonGroup.js","components/CanvasHeader/CanvasHeader.js","components/App/App.js","index.js"],"names":["CanvasUtility","width","height","convertToString","stringView","repeat","row","column","array","canvasParts","push","drawLine","x1","y1","x2","y2","Error","max","i","drawRectangle","fillArea","x","y","bucketColor","canvas","startPoint","stack","length","pop","this","createCanvasArray","handleCanvasCreation","parsedParams","Object","keys","forEach","commandName","setAction","finalCanvas","join","FileUtility","createOutputFile","err","message","canvasActions","action","state","color","console","log","readFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","parseInputParams","textCommands","divideCommandsByLine","split","filter","line","error","commands","command","commandType","args","slice","map","value","Number","isNaN","blob","Blob","type","URL","createObjectURL","processInputFile","inputFile","a","async","fileData","successFileProcess","fileProps","payload","errorFileProcess","errorMessage","initialState","outputLink","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","CanvasField","className","style","fontSize","connect","ButtonGroup","handleInputFile","link","htmlFor","id","onChange","evt","target","files","href","download","dispatch","CanvasHeader","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.775f6068.chunk.js","sourcesContent":["import FileUtility from './FileUtility';\r\n\r\nclass CanvasUtility {\r\n\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.array = this.createCanvasArray(width, height);\r\n    this.canvasParts = [];\r\n  }\r\n\r\n  createCanvasArray(width, height) {\r\n    const array = [];\r\n    for (let row = 0; row < height; row++) {\r\n      array[row] = [];\r\n      for (let column = 0; column < width; column++) {\r\n        array[row][column] = ' ';\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n\r\n  convertToString = () => {\r\n    this.stringView = '-'.repeat(this.width + 2);\r\n    this.stringView += '\\n';\r\n    for (let row = 0; row < this.height; row++) {\r\n      this.stringView += '|';\r\n      for (let column = 0; column < this.width; column++) {\r\n        this.stringView += this.array[row][column];\r\n      }\r\n      this.stringView += '|';\r\n      this.stringView += '\\n';\r\n    }\r\n    this.stringView += '-'.repeat(this.width + 2);\r\n    this.canvasParts.push(this.stringView + '\\n');\r\n  };\r\n\r\n  drawLine = (x1, y1, x2, y2) => {\r\n\r\n    if ((x1 > this.width || y1 > this.height) ||\r\n      (x2 > this.width || y2 > this.height)) {\r\n      throw new Error('Draw line out of paint zone!');\r\n    }\r\n\r\n    if (y1 === y2) {\r\n      const row = this.array[y1 - 1];\r\n\r\n      const min = x2 > x1 ? x1 : x2;\r\n      const max = x2 > x1 ? x2 : x1;\r\n      for (let i = min; i <= max; i++) {\r\n        row[i - 1] = 'x';\r\n      }\r\n    } else if (x1 === x2) {\r\n      const min = y2 > y1 ? y1 : y2;\r\n      const max = y2 > y1 ? y2 : y1;\r\n      for (let i = min; i <= max; i++) {\r\n        const row = this.array[i - 1];\r\n        row[x1 - 1] = 'x';\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  drawRectangle = (x1, y1, x2, y2) => {\r\n      this.drawLine(x1, y1, x2, y1);\r\n      this.drawLine(x2, y1, x2, y2);\r\n      this.drawLine(x2, y2, x1, y2);\r\n      this.drawLine(x1, y2, x1, y1);\r\n  };\r\n\r\n  fillArea = (x, y, bucketColor) => {\r\n    if (x > this.width || y > this.height)\r\n      throw new Error('Bucket fill out of paint zone!');\r\n\r\n    const canvas = this.array;\r\n\r\n    const startPoint = { x, y };\r\n    const stack = [];\r\n    stack.push(startPoint);\r\n\r\n    while (stack.length) {\r\n      const { x, y } = stack.pop();\r\n      if (!(x > this.width || y > this.height || y <= 0 || x <= 0)) {\r\n\r\n        const row = canvas[y - 1];\r\n        if (row[x - 1] === ' ') {\r\n          row[x - 1] = bucketColor;\r\n          stack.push({ x: x + 1, y: y });\r\n          stack.push({ x: x - 1, y: y });\r\n          stack.push({ x: x, y: y + 1 });\r\n          stack.push({ x: x, y: y - 1 });\r\n        }\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  static handleCanvasCreation = (parsedParams) => {\r\n    try {\r\n      \r\n      Object.keys(parsedParams).forEach(commandName => {\r\n  \r\n        if (parsedParams[commandName].length > 1) {\r\n          const length = parsedParams[commandName].length;\r\n          let i = 0;\r\n          while (length !== i) {\r\n            setAction(commandName, parsedParams[commandName][i], canvas);\r\n            i++;\r\n          }\r\n        } else {\r\n          setAction(commandName, parsedParams[commandName][0], canvas);\r\n        }\r\n      });\r\n      const finalCanvas = canvas.canvasParts.join('');\r\n      return [FileUtility.createOutputFile(finalCanvas), canvas.stringView, null];\r\n    } catch (err) {\r\n      return [null, null, new Error('Incorrect input commands.Please, try another commands!').message];\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst canvasActions = {\r\n  createCanvas: 'C',\r\n  drawLine: 'L',\r\n  drawRectangle: 'R',\r\n  fillArea: 'B',\r\n};\r\n\r\nlet canvas;\r\n\r\nexport const setAction = (action, state) => {\r\n  const { x1, y1, x2, y2, width, height, color } = state;\r\n\r\n  switch (action) {\r\n    case canvasActions.createCanvas:\r\n      canvas = new CanvasUtility(width, height);\r\n      break;\r\n    case canvasActions.drawLine:\r\n      canvas.drawLine(x1, y1, x2, y2);\r\n      break;\r\n    case canvasActions.drawRectangle:\r\n      canvas.drawLine(x1, y1, x2, y1);\r\n      canvas.drawLine(x2, y1, x2, y2);\r\n      canvas.drawLine(x2, y2, x1, y2);\r\n      canvas.drawLine(x1, y2, x1, y1);\r\n      break;\r\n    case canvasActions.fillArea:\r\n      canvas.fillArea(x1, y1, color);\r\n      break;\r\n    default:\r\n      console.log('Can`t find any canvas actions...');\r\n      break;\r\n  }\r\n\r\n  canvas.convertToString();\r\n}\r\n\r\nexport default CanvasUtility;","import CanvasUtility from './CanvasUtility';\r\n\r\nconst processInputFile = async (inputFile) => {\r\n  try {\r\n    if (inputFile.type === 'text/plain') {\r\n\r\n      const fileData = await readFileAsync(inputFile);\r\n      if (!fileData) throw new Error('File doesn`t contains any data!');\r\n      const commands = parseInputParams(fileData);\r\n\r\n      if (commands.error) throw new Error(commands.error);\r\n\r\n      return [...CanvasUtility.handleCanvasCreation(commands)];\r\n    }\r\n    else {\r\n      throw new Error('Cant read input file, type doesn`t match \"text/plain\"!');\r\n    }\r\n  } catch (err) {\r\n    return [null, null, err.message];\r\n  }\r\n\r\n};\r\n\r\nconst readFileAsync = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      resolve(reader.result);\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      reject('Error with reading txt file!');\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  });\r\n}\r\n\r\nconst parseInputParams = (textCommands) => {\r\n  const divideCommandsByLine = textCommands\r\n    .split('\\n')\r\n    .filter(line => line.length > 1);\r\n\r\n  if (divideCommandsByLine[0][0] !== 'C')\r\n    return { error: 'Command to create canvas doesn`t exist!' };\r\n\r\n\r\n  const commands = {};\r\n  divideCommandsByLine.forEach(command => {\r\n    const commandType = command[0];\r\n    const args = command.slice(2)\r\n      .split(' ')\r\n      .map(value => Number.isNaN(Number(value)) ? value : Number(value));\r\n    let width, height, x1, y1, x2, y2, color;\r\n\r\n    if (args.length === 2) [width, height] = args;\r\n    else if (args.length === 3) [x1, y1, color] = args;\r\n    else if (args.length === 4) [x1, y1, x2, y2] = args;\r\n\r\n    if (!commands[commandType]) {\r\n      commands[commandType] = [];\r\n      if (args.length === 2) commands[commandType].push({ width, height });\r\n      if (args.length === 4) commands[commandType].push({ x1, y1, x2, y2 });\r\n      if (args.length === 3) commands[commandType].push({ x1, y1, color });\r\n\r\n    } else {\r\n      if (args.length === 2) commands[commandType].push({ width, height });\r\n      if (args.length === 4) commands[commandType].push({ x1, y1, x2, y2 });\r\n      if (args.length === 3) commands[commandType].push({ x1, y1, color });\r\n    }\r\n  })\r\n\r\n  return commands;\r\n\r\n};\r\n\r\nconst createOutputFile = (canvas) => {\r\n  const blob = new Blob([canvas], { type: 'text/plain' });\r\n  return URL.createObjectURL(blob);\r\n}\r\n\r\nexport default {\r\n  createOutputFile,\r\n  processInputFile\r\n};\r\n","import FileUtility from '../utils/FileUtility';\r\nexport const HANDLE_FILE_SUCCESS = 'HANDLE_FILE_SUCCESS';\r\nexport const HANDLE_FILE_ERROR = 'HANDLE_FILE_ERROR';\r\n\r\nexport const handleInputFile = (file) => {\r\n  return async dispatch => {\r\n\r\n    const [outputLink, canvas, error] = await FileUtility.processInputFile(file);\r\n\r\n    if (error) dispatch(errorFileProcess(error));\r\n    else dispatch(successFileProcess([outputLink, canvas]));\r\n  }\r\n}\r\n\r\nexport const successFileProcess = (fileProps) => {\r\n  return {\r\n    type: HANDLE_FILE_SUCCESS,\r\n    payload: fileProps\r\n  }\r\n}\r\n\r\nexport const errorFileProcess = (errorMessage) => {\r\n  return {\r\n    type: HANDLE_FILE_ERROR,\r\n    payload: errorMessage\r\n  }\r\n}","import { HANDLE_FILE_SUCCESS, HANDLE_FILE_ERROR } from '../actions/fileActions'\r\n\r\nconst initialState = {\r\n  canvas: '',\r\n  outputLink: '',\r\n  errorMessage: ''\r\n}\r\n\r\nexport function fileReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case HANDLE_FILE_SUCCESS:\r\n      return { ...state, outputLink: action.payload[0], canvas: action.payload[1], errorMessage: '' }\r\n    case HANDLE_FILE_ERROR:\r\n      return { ...state, outputLink: null, canvas: null, errorMessage: action.payload}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { fileReducer } from './file'\r\n\r\nexport const rootReducer = combineReducers({\r\n  file: fileReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from './../reducers/index'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger))\r\n","import React from 'react';\r\nimport './CanvasField.css';\r\n\r\nfunction CanvasField({ canvas, errorMessage }) {\r\n\r\n  console.log(errorMessage);\r\n  \r\n  return (\r\n    <div className='canvas-field'>\r\n      {!errorMessage && canvas \r\n        ? <pre style={{ fontSize: \"1.5rem\" }}>{canvas}</pre> \r\n        : <p style={{color: 'red'}}>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanvasField;\r\n","import { connect } from \"react-redux\";\r\nimport CanvasField from \"../components/CanvasField/CanvasField.js\";\r\n\r\nconst mapStateToProps = ({ file }) => ({\r\n  canvas: file.canvas,\r\n  errorMessage: file.errorMessage\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(CanvasField);\r\n","import React from \"react\";\r\nimport './ButtonGroup.css'\r\n\r\nfunction ButtonGroup({ handleInputFile, link }) {\r\n\r\n  return (\r\n    <div className=\"btn-block\">\r\n      <label className=\"custom-file-upload\" htmlFor=\"input-file\">\r\n        Click to upload your txt file\r\n        <input type=\"file\" id=\"input-file\" onChange={(evt) => {\r\n          const inputFile = evt.target.files[0];\r\n          if (inputFile) handleInputFile(inputFile);\r\n        }}></input>\r\n      </label>\r\n      <br></br>\r\n      {link ? <a href={link} className=\"active-link\" download=\"output.txt\">Click to download your txt file</a>\r\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n        : <a href=\"#\" className=\"disabled-link\">You can`t download you file. Correct file required!</a>}\r\n    </div>\r\n  )\r\n};\r\nexport default ButtonGroup; ","import { connect } from \"react-redux\";\r\nimport ButtonGroup from \"../components/ButtonGroup/ButtonGroup.js\";\r\nimport { handleInputFile } from '../actions/fileActions';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleInputFile: file => dispatch(handleInputFile(file))\r\n});\r\n\r\nconst mapStateToProps = ({ file }) => ({\r\n  link: file.outputLink,\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonGroup);\r\n","import React from 'react';\r\nimport './CanvasHeader.css'\r\nfunction CanvasHeader () {\r\n  return (\r\n    <div>\r\n      <h1>Hello. In this app your can convert your input.txt file <br></br> into canvas and then download it. Try it!</h1>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CanvasHeader;\r\n\r\n","import React from 'react';\r\nimport CanvasField from '../../containers/CanvasField';\r\nimport ButtonGroup from '../../containers/ButtonGroup';\r\nimport CanvasHeader from '../../components/CanvasHeader/CanvasHeader';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <CanvasHeader></CanvasHeader>\r\n      <CanvasField></CanvasField>\r\n      <ButtonGroup></ButtonGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store/configureStore'\nimport App from './components/App/App.js';\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <main>\n      <App />\n    </main>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}